{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

<section class="product--page" itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product | img_url: 'grande' }}" />
   <div class="section__content page__title">
    <!-- <small>{{ collection.title }}</small> -->
  </div>

  <div class="section__content">
    <div class="one-half product--image">
      {% if product.images.size == 0 %}

        <img src="{{ '' | img_url: '1024x1024' }}" alt="" />

      {% else %}

        {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
        <a href="{{ featured_image | img_url: '1024x1024' }}">
          <img src="{{ featured_image | img_url: '1024x1024' }}" alt="{{ product.title | escape }}" />
        </a>
      {% endif %}
    </div>
    <div class="one-half product--details">
      <form action="/cart/add" method="post" enctype="multipart/form-data">
          <h2>{{ product.title }}</h2>

          <div id="product-price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
            <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
            {% if product.available %}
            <link itemprop="availability" href="http://schema.org/InStock" />
            {% else %}
            <link itemprop="availability" href="http://schema.org/OutOfStock" />
            {% endif %}
            <p>
              {% assign variant = product.selected_or_first_available_variant %}
              <span class="product-price" itemprop="price">{{ variant.price | money }}</span>
            </p>
          </div>

          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" />

          {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
            {% assign hide_default_title = true %}
          {% endif %}
          {% if product.variants == 1 %}
            {% assign hide_default_title = false %}
          {% endif %}

          <div id="product--variants" {% if hide_default_title %} class="hidden"{% endif %}>
            <select id="product-select" name="id">
            {% for variant in product.variants %}
              <option selected value="{{ variant.id }}">
                {{ variant.title }}
              </option>
            {% endfor %}
            </select>
          </div>

          <div itemprop="description">
            {{ product.description }}
          </div>

          <div id="backorder" class="hidden">
            <p>{{ '%s is back-ordered. We will ship it separately in 10 to 15 days.' | replace: '%s', '<span id="selected-variant"></span>' }}</p>
          </div>

          <div id="product-add">
            <input type="submit" name="add" id="add" value="{{ add_to_cart | escape }}">
          </div>

          {% if collection %}
            <a href="{{ collection.url }}" title="Back to the {{ collection.title }} collection page" class="secondary-link">&#8592; Go Back</a>
          {% endif %}

      </form>
    </div>
  </div>
  {% if product.images.size > 1 %}
    <div class="section__content alabaster-background">
      <div class="product--image--grid">
        {% for image in product.images offset:1 %}
          <div class="one-half">
            <img src="{{ image | img_url: '1024x1024' }}" alt="{{ image.alt | escape }}" />
          </div>
        {% endfor %}
      </div>
    </div>
  {% endif %}
</section>

{% comment %}
  Adding support for product options. See here for details:
  http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options
{% endcomment %}

<script>

var selectCallback = function(variant, selector) {

  if (variant) {

    // Swap image.
    if (variant.featured_image) {
      var newImage = variant.featured_image; // New image object.
      var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
      Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
    }

    // Selected a valid variant that is available.
    if (variant.available) {

      // Enabling add to cart button.
      jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});

      // If item is backordered yet can still be ordered, we'll show special message.
      if (variant.inventory_management && variant.inventory_quantity <= 0) {
        jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
        jQuery('#backorder').removeClass("hidden");
      } else {
        jQuery('#backorder').addClass("hidden");
      }

    } else {
      // Variant is sold out.
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);
    }

    // Whether the variant is in stock or not, we can update the price and compare at price.
    if ( variant.compare_at_price > variant.price ) {
      jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
    } else {
      jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
    }

  } else {
    // variant doesn't exist.
    jQuery('#product-price').empty();
    jQuery('#backorder').addClass('hidden');
    jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
  }

};

jQuery(function($) {

  new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });

  // Add label if only one product option and it isn't 'Title'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
  {% endif %}

});

Shopify.Image.preload({{ product.images | json }}, 'grande');
Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>